---
apiVersion: v1
kind: Namespace
metadata:
  name: llama
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: llama-model-cache
spec:
  capacity:
    storage: 30Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  hostPath:
    path: /data/llama-model-cache
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: llama-model-cache
  namespace: llama
spec:
  accessModes: [ "ReadWriteOnce" ]
  resources:
    requests:
      storage: 30Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: llama3
  namespace: llama
spec:
  replicas: 1
  selector:
    matchLabels:
      app: llama3
  template:
    metadata:
      labels:
        app: llama3
    spec:
      restartPolicy: Always
      volumes:
        - name: model-cache
          persistentVolumeClaim:
            claimName: llama-model-cache
      containers:
        - name: vllm
          image: vllm/vllm-openai:latest
          args:
            - "--model"
            - "deepseek-ai/DeepSeek-R1-Distill-Llama-8B"
            - "--port"
            - "8000"
          ports:
            - containerPort: 8000
          env:
            - name: HF_TOKEN
              value: "<YOUR_HF_TOKEN>"
          volumeMounts:
            - name: model-cache
              mountPath: /root/.cache/huggingface
          resources:
            requests:
              cpu: "1000m"
              memory: "4Gi"
              nvidia.com/gpu: "1"
            limits:
              cpu: "2000m"
              memory: "8Gi"
              nvidia.com/gpu: "1"
---
apiVersion: v1
kind: Service
metadata:
  name: llama3-svc
  namespace: llama
spec:
  type: ClusterIP
  selector:
    app: llama3
  ports:
    - port: 8000
      targetPort: 8000
      protocol: TCP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: open-webui
  namespace: llama
spec:
  replicas: 1
  selector:
    matchLabels:
      app: open-webui
  template:
    metadata:
      labels:
        app: open-webui
    spec:
      containers:
        - name: webui
          image: ghcr.io/open-webui/open-webui:main
          ports:
            - containerPort: 8080
          env:
            - name: OPENAI_API_BASE_URL
              value: "http://llama3-svc:8000/v1"
            - name: OPENAI_API_KEY
              value: ""
          resources:
            requests:
              cpu: 500m
              memory: 2Gi
            limits:
              cpu: 1000m
              memory: 4Gi
---
apiVersion: v1
kind: Service
metadata:
  name: open-webui-svc
  namespace: llama
spec:
  type: ClusterIP
  selector:
    app: open-webui
  ports:
    - name: http
      port: 80
      targetPort: 8080
      protocol: TCP
